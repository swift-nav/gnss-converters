# yamllint disable rule:line-length
---
sudo: required
dist: bionic

language: c

git:
  submodules: false

matrix:
  include:

    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main'
              key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
            - sourceline: 'deb https://apt.kitware.com/ubuntu/ bionic main'
              key_url: https://apt.kitware.com/keys/kitware-archive-latest.asc
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - g++-6
      env: GCCVER=6 TESTENV=gcc6

    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main'
              key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
            - sourceline: 'deb https://apt.kitware.com/ubuntu/ bionic main'
              key_url: https://apt.kitware.com/keys/kitware-archive-latest.asc
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - g++-6
            - lcov
      env: GCCVER=6 TESTENV=codecov

    - os: linux
      env: TESTENV=stack

    - os: linux
      language: rust
      rust: nightly-2020-05-25
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main'
              key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
            - sourceline: 'deb https://apt.kitware.com/ubuntu/ bionic main'
              key_url: https://apt.kitware.com/keys/kitware-archive-latest.asc
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - clang-6.0
      env: TESTENV=rust CC=clang-6.0 CXX=clang++-6.0

    - os: osx
      osx_image: xcode10
      language: rust
      rust: nightly-2020-05-25
      env: TESTENV=rust CC=clang CXX=clang++

#    - os: windows
#      language: rust
#      rust: nightly-2020-05-25-x86_64-pc-windows-gnu
#      env:
#        - TESTENV=rust
#        - CMAKE_GENERATOR="MinGW Makefiles"
#        - CC=gcc
#        - CXX=g++
#
cache:
  apt: true
  directories:
    - $HOME/.stack/

before_install:
  # Install stack and the required libsbp library
  - if [[ "$TESTENV" == "stack" ]]; then
      mkdir -p $HOME/.local/bin $HOME/.local/include $HOME/.local/lib;
      export PATH=~/.local/bin:$PATH;
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/.local/lib;
      travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
      git clone https://github.com/swift-nav/libsbp.git;
      mkdir libsbp/c/build;
      cd libsbp/c/build;
      /usr/bin/cmake ../;
      sudo make install;
      cd ../../../;
    fi
  - if [[ "$TESTENV" == "codecov" ]] || [[ "$TESTENV" == "gcc6" ]]; then
      export CC=gcc-$GCCVER;
      export CXX=g++-$GCCVER;
      export C_COMPILER=$CC;
      export CXX_COMPILER=$CXX;
      $CC --version;
      $CXX --version;
      /usr/bin/cmake --version;
      git submodule update --init --recursive;
    fi
  - if [[ "$TESTENV" == "rust" ]]; then
      export C_COMPILER=$CC;
      export CXX_COMPILER=$CXX;
      $CC --version;
      $CXX --version;
      git submodule update --init --recursive;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      choco uninstall -y mingw;
      choco install -y --no-progress mingw --version=6.4.0;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TESTENV" == "rust" ]]; then
      export CMAKE=/usr/bin/cmake;
    fi

after_success:
  if [[ "$TESTENV" == "codecov" ]]; then
    bash <(curl -s https://codecov.io/bash) -s c/build || echo "Codecov did not collect coverage reports";
  fi

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then rm "C:/Program Files/Git/usr/bin/sh.exe"; fi

script:
  - bash ./travis.sh
  - if [[ "$TESTENV" == "rust" ]] && [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      cd target/release;
      7z a -tzip ../../gnss_converters_windows.zip rtcm3tosbp.exe sbp2rtcm.exe ubx2sbp.exe ixcom2sbp.exe;
      cd ../..;
      VERSION="$(git describe --always --tags --dirty)";
      BUILD_TRIPLET="$($CC -dumpmachine)";
      mv gnss_converters_windows.zip "gnss_converters-${VERSION}-windows-${BUILD_TRIPLET}.zip";
      ls -l;
    fi
  - if [[ "$TESTENV" == "rust" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      tar -C "target/release" -czf gnss_converters_osx.tar.gz rtcm3tosbp sbp2rtcm ubx2sbp ixcom2sbp;
      VERSION="$(git describe --always --tags --dirty)";
      BUILD_TRIPLET="$($CC -dumpmachine)";
      mv gnss_converters_osx.tar.gz "gnss_converters-${VERSION}-${BUILD_TRIPLET}.tar.gz";
      ls -l;
    fi
  - if [[ "$TESTENV" == "rust" ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      tar -C "target/release" -czf gnss_converters_linux.tar.gz rtcm3tosbp sbp2rtcm ubx2sbp ixcom2sbp;
      VERSION="$(git describe --always --tags --dirty)";
      BUILD_TRIPLET="$($CC -dumpmachine)";
      mv gnss_converters_linux.tar.gz "gnss_converters-${VERSION}-${BUILD_TRIPLET}.tar.gz";
      ls -l;
    fi

_github_api_key: &_github_api_key
  api_key:
    secure: "CwMQv+68VPuwHtOgwjN9UJqJxEzxN0ncwUg6UVOEEMR4epIm97ZSjGD/rCFRM6/bQ/YMrxfvjwhas5EucJGjGXplnWXPYwoCvHXyOQrr3I2CjWz1ji4YWfAWwU5Dc7kI/K9X2YPmfdzwqO9/NMhcg7vcSx/i1F8IYtjbCx6GS+8SdxIqtq13kVXCVrFPLh0q2nPa3TroTS2G9xI8i+5E6uucYdrAMLuRmyp/mDNRE2DbeCaWxSQUg8/aMH8i6IsCrQ3kfL6OxKKT1wmgQ9jjaRO9+B2er5fPP0DlFL7EKdVxIKZiDON7n/RpnbbkucnbVdoW9TQbCj+SRd0R0wvg/x6z5S/19WZdutIk6fCXOJnw7DfoQ5Y7jp8vZf85oju99mBDhm8C35d1B1Wcj/ECYf0F4mnsOQ6LuBANh+oESnzSR7TifxNo31QVrXlYbu7Yg2+pKjU20MsEilP0aKDU7AzFx0SpTJcQLbx5PQdABHIRBZ6pmYCgXE76H7lFHD/rkj36YK0yK+ITRKI4ap3mREukYXWuTrRt4LDz/y4XBTrLUU6G6KQLbldV4tmxINSEuBR1GjwSKo5ZGt/QK4CcywZNW8Rkm0B9ZVQAr1ZqfYKad74fx/CHDcGXnY0bP+HwM09QroY/GymREgXAlBDDTokRv2iD5Tt4Jj+ZZvPxl9w="

deploy:
  - provider: releases
    file_glob: true
    file: "gnss_converters-*windows*.zip"
    skip_cleanup: true
    "on":
      tags: true
      condition: "$TRAVIS_OS_NAME = windows"
    <<: *_github_api_key
  - provider: releases
    file_glob: true
    file: "gnss_converters-*darwin*.tar.gz"
    skip_cleanup: true
    "on":
      tags: true
      condition: "$TRAVIS_OS_NAME = osx"
    <<: *_github_api_key
  - provider: releases
    file_glob: true
    file: "gnss_converters-*linux*.tar.gz"
    skip_cleanup: true
    "on":
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
    <<: *_github_api_key
...
